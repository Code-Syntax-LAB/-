# Python 학습 로드맵

## Chapter 1. 데이터 타입, 변수와 연산자
### 1.1 변수와 데이터 타입
- 숫자형 (정수, 실수)
- 문자열
- 불리언

### 1.2 타입 변환 (형 변환)
- 암시적 변환
- 명시적 변환 (`int()`, `float()`, `str()`)

### 1.3 변수 이름 규칙과 `input()` 함수
- 변수 이름 작성 규칙
- 사용자 입력 처리

### 1.4 산술 연산자와 우선순위
- 기본 산술 연산자 (`+`, `-`, `*`, `/`, `%`)
- 연산자 우선순위

### 1.5 비교 연산자
- 관계 연산자 (`==`, `!=`, `>`, `<`, `>=`, `<=`)

### 1.6 논리 연산자
- 논리 연산자 (`and`, `or`, `not`)
- 논리 연산의 결합

---

## Chapter 2. 조건문
### 2.1 if 문 기본 구조
- 조건문 작성 방법
- 블록과 들여쓰기

### 2.2 if-else 문과 조건 중첩
- 조건에 따른 분기 처리
- 중첩된 조건문 작성

### 2.3 elif 문과 다양한 조건 처리
- 다중 조건 처리
- 복잡한 조건 표현식 작성

---

## Chapter 3. 반복문
### 3.1 for 문과 `range()` 함수
- `for` 루프 기본 사용법
- `range()` 함수 활용법

### 3.2 while 문과 반복 조건
- 조건에 따른 반복 처리
- 무한 루프와 종료 조건

### 3.3 반복문에서의 `break`와 `continue`
- 반복 중단과 다음 반복으로 건너뛰기

---

## Chapter 4. 함수
### 4.1 함수 정의와 호출
- `def` 키워드로 함수 정의
- 함수 호출 방식

### 4.2 매개변수와 반환값
- 매개변수 전달
- `return` 키워드와 반환값 처리

### 4.3 기본 매개변수와 가변 매개변수
- 기본값을 갖는 매개변수
- 가변 인자 (`*args`, `**kwargs`) 사용법

---

## Chapter 5. 리스트와 기본 자료구조
### 5.1 리스트(List) 기본 사용법
- 리스트 정의와 요소 접근
- 리스트 슬라이싱

### 5.2 리스트 메서드
- 주요 메서드 (`append()`, `pop()`, `sort()`) 활용

### 5.3 딕셔너리(Dictionary)와 키-값 쌍
- 딕셔너리 정의와 사용법
- 키와 값 접근 및 수정

---

## Chapter 6. 클래스와 객체
### 6.1 클래스 기본 구조
- `class` 키워드로 클래스 정의
- 객체 생성 및 사용

### 6.2 생성자와 소멸자
- `__init__` 메서드로 초기화
- `__del__` 메서드로 객체 소멸

### 6.3 클래스 메서드와 인스턴스 메서드
- `@classmethod`와 `@staticmethod` 활용
- 메서드 내 인스턴스 참조

---

## Chapter 7. 상속과 다형성
### 7.1 상속의 기본
- 부모 클래스와 자식 클래스
- `super()`로 부모 클래스 호출

### 7.2 메서드 오버라이딩
- 자식 클래스에서 메서드 재정의
- 오버라이딩 활용 

### 7.3 다형성과 추상 클래스
- 다형성의 개념과 사용
- `abc` 모듈 추상 클래스 정의
